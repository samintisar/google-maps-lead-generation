{
  "name": "Social Media Outreach Automation (API Version)",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * 1-5"
            }
          ]
        }
      },
      "name": "Daily LinkedIn Outreach Schedule",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        200,
        400
      ],
      "id": "daily-schedule"
    },
    {
      "parameters": {},
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        200,
        280
      ],
      "id": "manual-trigger"
    },
    {
      "parameters": {
        "url": "http://backend:8000/api/workflows/leads/social-outreach?limit=10",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {},
        "genericAuthType": "httpHeaderAuth"
      },
      "name": "Get High-Score Leads",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        420,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "oiDt5Ri93QZxjGEm",
          "name": "Header Auth account"
        }
      },
      "id": "get-leads-api"
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.data.length}}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "name": "Check If Leads Exist",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        640,
        320
      ],
      "id": "check-leads-exist"
    },
    {
      "parameters": {
        "jsCode": "// Generate personalized LinkedIn connection message\nconst leads = $input.all();\nconst results = [];\n\nfor (const leadData of leads) {\n  const lead = leadData.json.data || leadData.json;\n  \n  if (Array.isArray(lead)) {\n    // Handle array of leads\n    for (const singleLead of lead) {\n      results.push(generateMessageForLead(singleLead));\n    }\n  } else {\n    // Handle single lead\n    results.push(generateMessageForLead(lead));\n  }\n}\n\nfunction generateMessageForLead(lead) {\n  const templates = {\n    hot: [\n      `Hi {{firstName}}, I noticed you're at {{company}} and thought our automation solutions might be valuable for your team. Would love to connect!`,\n      `{{firstName}}, your background at {{company}} caught my attention. I'd like to share some insights on {{industry}} automation trends.`,\n      `Hello {{firstName}}! Saw your role at {{company}} - we've helped similar {{industry}} companies streamline their processes. Let's connect!`\n    ],\n    warm: [\n      `Hi {{firstName}}, I see you work at {{company}}. We help {{industry}} businesses like yours improve efficiency through automation.`,\n      `{{firstName}}, would love to connect and share some insights that might be relevant to {{company}}'s growth.`,\n      `Hello {{firstName}}! Noticed your position at {{company}}. Happy to connect and discuss automation opportunities.`\n    ],\n    cold: [\n      `Hi {{firstName}}, I'd like to connect and share some valuable insights for professionals in {{industry}}.`,\n      `{{firstName}}, would love to expand my network with {{industry}} professionals. Hope to connect!`,\n      `Hello {{firstName}}! Always interested in connecting with talented people from {{company}}.`\n    ]\n  };\n\n  const temperature = lead.lead_temperature || 'cold';\n  const messageTemplates = templates[temperature] || templates.cold;\n  const randomTemplate = messageTemplates[Math.floor(Math.random() * messageTemplates.length)];\n\n  // Replace placeholders\n  let personalizedMessage = randomTemplate\n    .replace(/{{firstName}}/g, lead.first_name || 'there')\n    .replace(/{{company}}/g, lead.company || 'your company')\n    .replace(/{{industry}}/g, lead.industry || 'your industry');\n\n  // Ensure message is under 200 characters (LinkedIn limit)\n  if (personalizedMessage.length > 200) {\n    personalizedMessage = personalizedMessage.substring(0, 197) + '...';\n  }\n\n  return {\n    json: {\n      ...lead,\n      connection_message: personalizedMessage,\n      outreach_type: 'linkedin_connection',\n      scheduled_time: new Date().toISOString()\n    }\n  };\n}\n\nreturn results;"
      },
      "name": "Generate Connection Messages",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        860,
        240
      ],
      "id": "generate-messages"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "person",
        "operation": "sendConnectionRequest",
        "profileUrl": "={{$json.linkedin_url}}",
        "message": "={{$json.connection_message}}"
      },
      "name": "Send LinkedIn Connection",
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        1080,
        160
      ],
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "6",
          "name": "LinkedIn API"
        }
      },
      "id": "send-linkedin-connection"
    },
    {
      "parameters": {
        "url": "={{ \"http://backend:8000/api/workflows/leads/\" + $json.id + \"/social-outreach\" }}",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "outreach_type",
              "value": "linkedin_connection"
            },
            {
              "name": "message_sent",
              "value": "=={{$json.connection_message}}"
            },
            {
              "name": "status",
              "value": "sent"
            },
            {
              "name": "linkedin_connection_status",
              "value": "pending"
            },
            {
              "name": "linkedin_connection_message",
              "value": "=={{$json.connection_message}}"
            }
          ]
        },
        "options": {},
        "genericAuthType": "httpHeaderAuth"
      },
      "name": "Log Connection Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1300,
        160
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "oiDt5Ri93QZxjGEm",
          "name": "Header Auth account"
        }
      },
      "id": "log-connection-api"
    },
    {
      "parameters": {
        "amount": 3,
        "unit": "days"
      },
      "name": "Wait 3 Days",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        1520,
        160
      ],
      "id": "wait-3-days"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.lead_temperature}}",
              "operation": "equal",
              "value2": "hot"
            }
          ]
        }
      },
      "name": "Is Hot Lead?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1080,
        320
      ],
      "id": "hot-lead-check"
    },
    {
      "parameters": {
        "subject": "ðŸ”¥ Hot Lead Alert: {{$json.data.first_name}} {{$json.data.last_name}} from {{$json.data.company}}",
        "emailType": "html",
        "html": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>Hot Lead Alert</title>\n</head>\n<body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n  <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n    <div style=\"background-color: #ff4444; color: white; padding: 15px; border-radius: 5px; text-align: center; margin-bottom: 20px;\">\n      <h1 style=\"margin: 0; font-size: 24px;\">ðŸ”¥ HOT LEAD ALERT</h1>\n    </div>\n    \n    <h2>LinkedIn Connection Request Sent</h2>\n    \n    <div style=\"background-color: #f8f9fa; padding: 20px; border-radius: 5px; margin: 20px 0;\">\n      <h3 style=\"margin-top: 0;\">Lead Information:</h3>\n      <ul>\n        <li><strong>Name:</strong> {{$json.data.first_name}} {{$json.data.last_name}}</li>\n        <li><strong>Company:</strong> {{$json.data.company}}</li>\n        <li><strong>Email:</strong> {{$json.data.email}}</li>\n        <li><strong>Score:</strong> {{$json.score}}/100</li>\n        <li><strong>Temperature:</strong> {{$json.lead_temperature}}</li>\n        <li><strong>LinkedIn:</strong> <a href=\"{{$json.linkedin_url}}\">View Profile</a></li>\n      </ul>\n    </div>\n    \n    <div style=\"background-color: #e8f5e8; padding: 20px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #28a745;\">\n      <h3 style=\"margin-top: 0; color: #155724;\">Connection Message Sent:</h3>\n      <p style=\"font-style: italic; margin-bottom: 0;\">\"{{$json.connection_message}}\"</p>\n    </div>\n    \n    <p><strong>Next Steps:</strong> Monitor for connection acceptance and prepare personalized follow-up approach.</p>\n    \n    <p>Best regards,<br>\n    LMA Automation System</p>\n  </div>\n</body>\n</html>",
        "toEmail": "sales@leadmanagement.com",
        "fromEmail": "automation@leadmanagement.com",
        "fromName": "LMA Hot Lead Alert"
      },
      "name": "Send Hot Lead Alert",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        1300,
        400
      ],
      "credentials": {
        "smtp": {
          "id": "2",
          "name": "SMTP Email"
        }
      },
      "id": "send-hot-lead-alert"
    },
    {
      "parameters": {
        "jsCode": "// Simulate checking if connection was accepted\n// In a real implementation, this would query LinkedIn API or use webhooks\nconst lead = $json;\n\n// For demo purposes, randomly simulate 30% acceptance rate\nconst isAccepted = Math.random() < 0.3;\n\nif (isAccepted) {\n  return {\n    json: {\n      ...lead,\n      linkedin_connection_status: 'connected',\n      connection_accepted: true,\n      connection_accepted_at: new Date().toISOString()\n    }\n  };\n} else {\n  return {\n    json: {\n      ...lead,\n      linkedin_connection_status: 'pending',\n      connection_accepted: false\n    }\n  };\n}"
      },
      "name": "Check Connection Status",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1740,
        160
      ],
      "id": "check-connection-status"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.connection_accepted}}",
              "value2": true
            }
          ]
        }
      },
      "name": "Connection Accepted?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1960,
        160
      ],
      "id": "connection-accepted-check"
    },
    {
      "parameters": {
        "jsCode": "// Generate follow-up message after connection\nconst lead = $json;\nconst followUpTemplates = {\n  hot: [\n    `Thanks for connecting, {{firstName}}! I'd love to learn more about {{company}}'s current automation challenges. Would you be open to a brief 15-minute call this week?`,\n    `Hi {{firstName}}, appreciate the connection! I have some insights that could help {{company}} streamline operations. Mind if I send over a quick case study?`,\n    `{{firstName}}, thanks for connecting! We've helped {{industry}} companies like {{company}} increase efficiency by 40%. Would love to share how.`\n  ],\n  warm: [\n    `Hi {{firstName}}, great to connect! I'd be happy to share some automation insights that might be valuable for {{company}}.`,\n    `Thanks for connecting, {{firstName}}! Would love to learn more about your role at {{company}} and see if our solutions align.`,\n    `{{firstName}}, appreciate the connection! Happy to discuss how automation could benefit {{company}}'s workflow.`\n  ],\n  cold: [\n    `Thanks for connecting, {{firstName}}! Always great to expand my network with {{industry}} professionals.`,\n    `Hi {{firstName}}, appreciate the connection! Hope to learn more about your work at {{company}}.`,\n    `{{firstName}}, great to connect! Looking forward to staying in touch and sharing valuable insights.`\n  ]\n};\n\nconst temperature = lead.lead_temperature || 'cold';\nconst messageTemplates = followUpTemplates[temperature] || followUpTemplates.cold;\nconst randomTemplate = messageTemplates[Math.floor(Math.random() * messageTemplates.length)];\n\nlet followUpMessage = randomTemplate\n  .replace(/{{firstName}}/g, lead.first_name || 'there')\n  .replace(/{{company}}/g, lead.company || 'your company')\n  .replace(/{{industry}}/g, lead.industry || 'your industry');\n\nreturn {\n  json: {\n    ...lead,\n    follow_up_message: followUpMessage,\n    outreach_type: 'linkedin_follow_up',\n    scheduled_time: new Date().toISOString()\n  }\n};"
      },
      "name": "Generate Follow-up Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2180,
        80
      ],
      "id": "generate-followup"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "message",
        "operation": "send",
        "recipientProfileUrl": "={{$json.linkedin_url}}",
        "messageText": "={{$json.follow_up_message}}"
      },
      "name": "Send Follow-up Message",
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        2400,
        80
      ],
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "6",
          "name": "LinkedIn API"
        }
      },
      "id": "send-followup-message"
    },
    {
      "parameters": {
        "url": "={{ \"http://backend:8000/api/workflows/leads/\" + $json.id + \"/social-outreach\" }}",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "outreach_type",
              "value": "linkedin_follow_up"
            },
            {
              "name": "message_sent",
              "value": "={{$json.follow_up_message}}"
            },
            {
              "name": "status",
              "value": "sent"
            },
            {
              "name": "linkedin_connection_status",
              "value": "connected"
            },
            {
              "name": "linkedin_follow_up_message",
              "value": "={{$json.follow_up_message}}"
            }
          ]
        },
        "options": {},
        "genericAuthType": "httpHeaderAuth"
      },
      "name": "Log Follow-up Activity",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2620,
        80
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "oiDt5Ri93QZxjGEm",
          "name": "Header Auth account"
        }
      },
      "id": "log-followup-api"
    }
  ],
  "connections": {
    "Daily LinkedIn Outreach Schedule": {
      "main": [
        [
          {
            "node": "Get High-Score Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Get High-Score Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get High-Score Leads": {
      "main": [
        [
          {
            "node": "Check If Leads Exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Leads Exist": {
      "main": [
        [
          {
            "node": "Generate Connection Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Connection Messages": {
      "main": [
        [
          {
            "node": "Send LinkedIn Connection",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is Hot Lead?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send LinkedIn Connection": {
      "main": [
        [
          {
            "node": "Log Connection Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Connection Request": {
      "main": [
        [
          {
            "node": "Wait 3 Days",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 3 Days": {
      "main": [
        [
          {
            "node": "Check Connection Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Hot Lead?": {
      "main": [
        [
          {
            "node": "Send Hot Lead Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Connection Status": {
      "main": [
        [
          {
            "node": "Connection Accepted?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Connection Accepted?": {
      "main": [
        [
          {
            "node": "Generate Follow-up Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Follow-up Message": {
      "main": [
        [
          {
            "node": "Send Follow-up Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Message": {
      "main": [
        [
          {
            "node": "Log Follow-up Activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "timezone": "America/New_York"
  },
  "createdAt": "2024-01-15T10:30:00.000Z",
  "updatedAt": "2024-01-15T10:30:00.000Z",
  "id": "social-media-outreach-api",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "parameters": {
    "BACKEND_URL": {
      "displayName": "Backend URL",
      "name": "BACKEND_URL",
      "type": "string",
      "default": "http://192.168.1.106:8000",
      "description": "The base URL of your LMA backend API (e.g., http://192.168.1.106:8000)"
    }
  }
}