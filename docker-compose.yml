version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lma-postgres
    environment:
      POSTGRES_DB: lma_db
      POSTGRES_USER: lma_user
      POSTGRES_PASSWORD: lma_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lma_user -d lma_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL Exporter for metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: lma-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://lma_user:lma_password@postgres:5432/lma_db?sslmode=disable"
    networks:
      - lma-network
    depends_on:
      - postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lma-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lma-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Exporter for metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: lma-redis-exporter
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: "redis://redis:6379"
    networks:
      - lma-network
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # n8n Workflow Engine (Primary automation layer)
  n8n:
    image: n8nio/n8n:latest
    container_name: lma-n8n
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=lma_user
      - DB_POSTGRESDB_PASSWORD=lma_password
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/opt/workflows
    depends_on:
      - postgres
      - redis
    networks:
      - lma-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # FastAPI Python Backend (Analytics focus)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lma-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - PORT=8000
      - DATABASE_URL=postgresql://lma_user:lma_password@postgres:5432/lma_db
      - REDIS_URL=redis://redis:6379/0
      - N8N_BASE_URL=http://n8n:5678
    depends_on:
      - postgres
      - redis
      - n8n
    networks:
      - lma-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # SvelteKit Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lma-frontend
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - PORT=5173
      - VITE_API_URL=http://localhost:8000
      - VITE_N8N_URL=http://localhost:5678
    depends_on:
      - backend
    networks:
      - lma-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Loki for centralized logging
  loki:
    image: grafana/loki:2.9.0
    container_name: lma-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - lma-network

  # Promtail for log collection
  promtail:
    image: grafana/promtail:2.9.0
    container_name: lma-promtail
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - lma-network
    depends_on:
      - loki

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: lma-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--alertmanager.url=http://alertmanager:9093'
    networks:
      - lma-network
    depends_on:
      - backend
      - postgres
      - redis
      - n8n
      - alertmanager
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # AlertManager for handling alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: lma-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - lma-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Grafana Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: lma-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - lma-network
    depends_on:
      - prometheus
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: lma-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - lma-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: lma-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - lma-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # SvelteKit Frontend (Production)
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: lma-frontend-prod
    ports:
      - "5174:5173"
    environment:
      - NODE_ENV=production
      - PORT=5173
      - VITE_API_URL=http://localhost:8000
      - VITE_N8N_URL=http://localhost:5678
    depends_on:
      - backend
    networks:
      - lma-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  prometheus_data:
  grafana_data:
  loki_data:
  alertmanager_data:

networks:
  lma-network:
    driver: bridge
