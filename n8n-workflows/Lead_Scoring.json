{
  "name": "Lead Scoring",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "lead-activity",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Lead Activity Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1100,
        300
      ],
      "webhookId": "lead-activity-webhook",
      "id": "63d6dd8d-eefe-4fd1-ac25-1043dd1ceb7b"
    },
    {
      "parameters": {},
      "name": "Hourly Score Update",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -1320,
        100
      ],
      "id": "c2a0d5b7-d9b1-4f3a-8d10-00dffc80155c"
    },
    {
      "parameters": {
        "url": "http://192.168.1.106:8000/api/leads/dev?test_scoring=true",
        "options": {}
      },
      "name": "Get Leads for Scoring",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1100,
        100
      ],
      "id": "2acd054b-b914-42bf-be90-8490f444dcb4"
    },
    {
      "parameters": {
        "jsCode": "// Advanced lead scoring algorithm\nconst response = $input.first().json;\nconst leads = response.data || [];\nconst scoredLeads = [];\n\nfor (const lead of leads) {\n  let score = 0;\n  let scoreBreakdown = {\n    demographic: 0,\n    behavioral: 0,\n    engagement: 0,\n    firmographic: 0,\n    temporal: 0\n  };\n  \n  // DEMOGRAPHIC SCORING (0-25 points)\n  if (lead.job_title) {\n    const title = lead.job_title.toLowerCase();\n    if (title.includes('ceo') || title.includes('founder') || title.includes('president')) {\n      scoreBreakdown.demographic += 25;\n    } else if (title.includes('vp') || title.includes('director') || title.includes('head')) {\n      scoreBreakdown.demographic += 20;\n    } else if (title.includes('manager') || title.includes('lead')) {\n      scoreBreakdown.demographic += 15;\n    } else {\n      scoreBreakdown.demographic += 10;\n    }\n  }\n  \n  // FIRMOGRAPHIC SCORING (0-25 points)\n  if (lead.company_size) {\n    if (lead.company_size >= 1000) scoreBreakdown.firmographic += 25;\n    else if (lead.company_size >= 100) scoreBreakdown.firmographic += 20;\n    else if (lead.company_size >= 50) scoreBreakdown.firmographic += 15;\n    else if (lead.company_size >= 10) scoreBreakdown.firmographic += 10;\n    else scoreBreakdown.firmographic += 5;\n  }\n  \n  // Industry scoring\n  if (lead.industry) {\n    const highValueIndustries = ['technology', 'saas', 'finance', 'healthcare', 'consulting'];\n    if (highValueIndustries.some(ind => lead.industry.toLowerCase().includes(ind))) {\n      scoreBreakdown.firmographic += 10;\n    }\n  }\n  \n  // BEHAVIORAL SCORING (0-30 points)\n  if (lead.website_visits) {\n    if (lead.website_visits >= 10) scoreBreakdown.behavioral += 15;\n    else if (lead.website_visits >= 5) scoreBreakdown.behavioral += 10;\n    else if (lead.website_visits >= 2) scoreBreakdown.behavioral += 5;\n  }\n  \n  if (lead.pages_viewed) {\n    if (lead.pages_viewed >= 20) scoreBreakdown.behavioral += 15;\n    else if (lead.pages_viewed >= 10) scoreBreakdown.behavioral += 10;\n    else if (lead.pages_viewed >= 5) scoreBreakdown.behavioral += 5;\n  }\n  \n  // ENGAGEMENT SCORING (0-20 points)\n  if (lead.email_opens) {\n    if (lead.email_opens >= 5) scoreBreakdown.engagement += 10;\n    else if (lead.email_opens >= 2) scoreBreakdown.engagement += 5;\n  }\n  \n  if (lead.email_clicks) {\n    if (lead.email_clicks >= 3) scoreBreakdown.engagement += 10;\n    else if (lead.email_clicks >= 1) scoreBreakdown.engagement += 5;\n  }\n  \n  if (lead.downloads) {\n    scoreBreakdown.engagement += Math.min(lead.downloads * 3, 10);\n  }\n  \n  // TEMPORAL SCORING - Recent activity bonus (0-10 points)\n  const now = new Date();\n  const lastActivity = new Date(lead.last_activity_at || lead.created_at);\n  const daysSinceActivity = (now - lastActivity) / (1000 * 60 * 60 * 24);\n  \n  if (daysSinceActivity <= 1) scoreBreakdown.temporal += 10;\n  else if (daysSinceActivity <= 3) scoreBreakdown.temporal += 7;\n  else if (daysSinceActivity <= 7) scoreBreakdown.temporal += 5;\n  else if (daysSinceActivity <= 14) scoreBreakdown.temporal += 3;\n  \n  // NEGATIVE SCORING\n  if (lead.unsubscribed) score -= 50;\n  if (lead.bounced_emails && lead.bounced_emails > 2) score -= 20;\n  if (daysSinceActivity > 90) score -= 20;\n  \n  // Calculate final score\n  score = Object.values(scoreBreakdown).reduce((sum, val) => sum + val, 0);\n  score = Math.max(0, Math.min(100, score)); // Cap between 0-100\n  \n  // Determine lead temperature\n  let temperature;\n  let nextAction;\n  \n  if (score >= 80) {\n    temperature = 'hot';\n    nextAction = 'immediate_sales_contact';\n  } else if (score >= 60) {\n    temperature = 'warm';\n    nextAction = 'personalized_follow_up';\n  } else if (score >= 40) {\n    temperature = 'cold';\n    nextAction = 'nurturing_sequence';\n  } else {\n    temperature = 'frozen';\n    nextAction = 're_engagement_campaign';\n  }\n  \n  scoredLeads.push({\n    ...lead,\n    previous_score: lead.score,\n    score: score,\n    score_breakdown: scoreBreakdown,\n    lead_temperature: temperature,\n    recommended_action: nextAction,\n    score_updated_at: now.toISOString(),\n    score_change: score - (lead.score || 0)\n  });\n}\n\nreturn scoredLeads.map(lead => ({ json: lead }));"
      },
      "name": "Calculate Lead Scores",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -880,
        200
      ],
      "id": "bbc860cb-d000-4f97-99a8-71fadb58572e"
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.score_change}}",
              "operation": "largerEqual",
              "value2": 10
            }
          ]
        }
      },
      "name": "Significant Score Change",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -660,
        200
      ],
      "id": "4ea11f2a-1d84-4c3a-95ba-edf1f8b06bd6"
    },
    {
      "parameters": {
        "url": "http://192.168.1.106:8000/api/leads/score/bulk-update-n8n",
        "options": {}
      },
      "name": "Update Lead Score",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -440,
        200
      ],
      "id": "bc61bf7c-6d88-4f30-b5b1-1f5dc7499496"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.lead_temperature}}",
              "value2": "hot"
            }
          ]
        }
      },
      "name": "Is Hot Lead",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -220,
        100
      ],
      "id": "10f4a1db-ae49-4b98-97eb-a3a942e4f982"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.lead_temperature}}",
              "value2": "warm"
            }
          ]
        }
      },
      "name": "Is Warm Lead",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -220,
        400
      ],
      "id": "20278035-3483-4f68-8f22-0368a9701742"
    },
    {
      "parameters": {
        "url": "http://192.168.1.106:8000/api/sales-alerts/hot-lead",
        "options": {}
      },
      "name": "Notify Sales Team",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        0,
        200
      ],
      "id": "4a23cea1-7730-453b-a07d-7597fc0196f5"
    },
    {
      "parameters": {
        "url": "http://192.168.1.106:8000/api/workflows/lead/{{$json.id}}/auto-assign",
        "options": {}
      },
      "name": "Trigger Follow-up Workflow",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        0,
        400
      ],
      "id": "8e2c390a-0eff-41d7-8907-c382508be4d4"
    },
    {
      "parameters": {
        "url": "http://192.168.1.106:8000/api/leads/activity/log",
        "options": {}
      },
      "name": "Log Scoring Activity",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        220,
        200
      ],
      "id": "02507278-1597-42c6-aa54-1824016362d2"
    },
    {
      "parameters": {
        "fromEmail": "admin@worklinesupply.co",
        "toEmail": "admin@worklinesupply.co",
        "subject": "ðŸ”¥ Hot Lead Alert: {{$json.first_name}} {{$json.last_name}} (Score: {{$json.score}})",
        "options": {}
      },
      "name": "Send Sales Alert Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "7c4706c8-44b7-4914-9540-25b902768ced",
      "webhookId": "3406cdb1-94a3-43ee-83f2-49571406b012",
      "credentials": {
        "smtp": {
          "id": "OPFqwNYSwGInl94s",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"success\",\n  \"message\": \"Lead scoring completed\",\n  \"processed_leads\": {{$json.length || 1}},\n  \"score\": {{$json.score}},\n  \"temperature\": \"{{$json.lead_temperature}}\",\n  \"actions_triggered\": [\"score_update\", \"{{$json.recommended_action}}\"],\n  \"timestamp\": \"{{$now.toISO()}}\"\n}",
        "options": {}
      },
      "name": "Return Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        440,
        200
      ],
      "id": "23333895-a5f6-466b-a764-b32a08cf8ef2"
    }
  ],
  "pinData": {},
  "connections": {
    "Lead Activity Webhook": {
      "main": [
        [
          {
            "node": "Calculate Lead Scores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hourly Score Update": {
      "main": [
        [
          {
            "node": "Get Leads for Scoring",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Leads for Scoring": {
      "main": [
        [
          {
            "node": "Calculate Lead Scores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Lead Scores": {
      "main": [
        [
          {
            "node": "Significant Score Change",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Significant Score Change": {
      "main": [
        [
          {
            "node": "Update Lead Score",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Lead Score": {
      "main": [
        [
          {
            "node": "Is Hot Lead",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is Warm Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Hot Lead": {
      "main": [
        [
          {
            "node": "Notify Sales Team",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Sales Alert Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Warm Lead": {
      "main": [
        [
          {
            "node": "Trigger Follow-up Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Sales Team": {
      "main": [
        [
          {
            "node": "Log Scoring Activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger Follow-up Workflow": {
      "main": [
        [
          {
            "node": "Log Scoring Activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Sales Alert Email": {
      "main": [
        [
          {
            "node": "Log Scoring Activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Scoring Activity": {
      "main": [
        [
          {
            "node": "Return Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "cdebe85f-1a78-4330-9606-067f811bf1c3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ba04f6b4a6b279b1423570d4e42ff3cdde1f81ac5e42ff115cb4a3b24bbcc2af"
  },
  "id": "TV0mlxFTt3qBbWFs",
  "tags": [
    {
      "name": "Lead Scoring",
      "id": "c4Tj7JNUQLD89xeK",
      "createdAt": "2025-06-07T04:39:09.976Z",
      "updatedAt": "2025-06-07T04:39:09.976Z"
    },
    {
      "name": "Automation",
      "id": "zlHzb8812axyJ1YN",
      "createdAt": "2025-06-07T05:00:33.085Z",
      "updatedAt": "2025-06-07T05:00:33.085Z"
    }
  ]
}